* 2015
** 2015-02 February
*** 2015-02-05 Thursday
**** tufte style instructions
:PROPERTIES:
:DATE:     <2015-02-05 Thu 16:22>
:END:



**** tufte  - compiling with xelatex
 :PROPERTIES:
 :DATE: <2015-02-05 Thu 13:50>
 :END:
http://www.ctan.org/pkg/tufte-latex


For how to compile with xelatex:
***** Answer 1

http://tex.stackexchange.com/questions/202142/trouble-shooting-tufte-title-page

Here is the answer quoted:

It's a bug in the tufte suite. The minimal example

#+BEGIN_EXAMPLE

\documentclass{tufte-book}

\title{this is a title}
\author{me}

\begin{document}

\maketitle

\end{document}

#+END_EXAMPLE

also fails when compiled with latex, because with latex and xelatex there's no possibility of using microtype for letterspacing, so tufte-common.def resorts to using soul features. However, \MakeTextUppercase fails with this method.

For XeLaTeX a workaround can be found in my answer to XeTeX seems to break headers in Tufte-handout

#+BEGIN_EXAMPLE

\documentclass{tufte-book}

\usepackage{ifxetex}
\ifxetex
  \newcommand{\textls}[2][5]{%
    \begingroup\addfontfeatures{LetterSpace=#1}#2\endgroup
  }
  \renewcommand{\allcapsspacing}[1]{\textls[15]{#1}}
  \renewcommand{\smallcapsspacing}[1]{\textls[10]{#1}}
  \renewcommand{\allcaps}[1]{\textls[15]{\MakeTextUppercase{#1}}}
  \renewcommand{\smallcaps}[1]{\smallcapsspacing{\scshape\MakeTextLowercase{#1}}}
  \renewcommand{\textsc}[1]{\smallcapsspacing{\textsmallcaps{#1}}}
  \usepackage{fontspec}
\fi

\title{this is a title}
\author{me}

\begin{document}

\maketitle

\end{document}

#+END_EXAMPLE

Of course you'll have to define font substitutes for the text fonts; the choice

#+BEGIN_EXAMPLE

\ifxetex
  \newcommand{\textls}[2][5]{%
    \begingroup\addfontfeatures{LetterSpace=#1}#2\endgroup
  }
  \renewcommand{\allcapsspacing}[1]{\textls[15]{#1}}
  \renewcommand{\smallcapsspacing}[1]{\textls[10]{#1}}
  \renewcommand{\allcaps}[1]{\textls[15]{\MakeTextUppercase{#1}}}
  \renewcommand{\smallcaps}[1]{\smallcapsspacing{\scshape\MakeTextLowercase{#1}}}
  \renewcommand{\textsc}[1]{\smallcapsspacing{\textsmallcaps{#1}}}
  \usepackage{fontspec}
  \setmainfont{TeX Gyre Pagella}
  \setsansfont{TeX Gyre Heros}[Scale=MatchUppercase]
\fi


#+END_EXAMPLE

should produce a quite similar output. The method for choosing the font may be different on your machines, it mostly depends on the installation; so mileage may vary. (Please, ask in comments if the proposed code doesn't work for you.)
***** answer 2
http://tex.stackexchange.com/questions/200722/xetex-seems-to-break-headers-in-tufte-handout

In tufte-common.def it is said that in case XeLaTeX is used, its features for letter spacing will be used, but the authors forgot to do it, so the soul fallback mechanism is used, which miserably fails.

Fix the definition:

#+BEGIN_EXAMPLE

\documentclass[nofonts]{tufte-handout}
\usepackage{fontspec}
\usepackage{ifxetex}
\setmainfont{Minion Pro}
\usepackage{lipsum}

\ifxetex
  \newcommand{\textls}[2][5]{%
    \begingroup\addfontfeatures{LetterSpace=#1}#2\endgroup
  }
  \renewcommand{\allcapsspacing}[1]{\textls[15]{#1}}
  \renewcommand{\smallcapsspacing}[1]{\textls[10]{#1}}
  \renewcommand{\allcaps}[1]{\textls[15]{\MakeTextUppercase{#1}}}
  \renewcommand{\smallcaps}[1]{\smallcapsspacing{\scshape\MakeTextLowercase{#1}}}
  \renewcommand{\textsc}[1]{\smallcapsspacing{\textsmallcaps{#1}}}
\fi


\title{Problem Document Title}
\author{Author Name}
\date{\today}
\begin{document}
\maketitle

\allcaps{Abcdef}\\
\smallcaps{Abcdef}\\
\textsc{Abcdef}

\lipsum[1-10]
\end{document}

#+END_EXAMPLE

Check the values against compilation with LuaLaTeX.
*** 2015-02-12 Thursday
**** store source and template as attachments
 :PROPERTIES:
 :DATE: <2015-02-12 Thu 20:47>
 :END:
